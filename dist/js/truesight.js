!function(n){var t={};function e(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:r})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var o in n)e.d(r,o,function(t){return n[t]}.bind(null,o));return r},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s="./src/main.js")}({"./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* MIT license */\nvar cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/color-convert/node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/conversions.js?")},"./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\nvar route = __webpack_require__(/*! ./route */ \"./node_modules/color-convert/route.js\");\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/index.js?")},"./node_modules/color-convert/node_modules/color-name/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/color-convert/node_modules/color-name/index.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports){eval('module.exports = {\r\n\t"aliceblue": [240, 248, 255],\r\n\t"antiquewhite": [250, 235, 215],\r\n\t"aqua": [0, 255, 255],\r\n\t"aquamarine": [127, 255, 212],\r\n\t"azure": [240, 255, 255],\r\n\t"beige": [245, 245, 220],\r\n\t"bisque": [255, 228, 196],\r\n\t"black": [0, 0, 0],\r\n\t"blanchedalmond": [255, 235, 205],\r\n\t"blue": [0, 0, 255],\r\n\t"blueviolet": [138, 43, 226],\r\n\t"brown": [165, 42, 42],\r\n\t"burlywood": [222, 184, 135],\r\n\t"cadetblue": [95, 158, 160],\r\n\t"chartreuse": [127, 255, 0],\r\n\t"chocolate": [210, 105, 30],\r\n\t"coral": [255, 127, 80],\r\n\t"cornflowerblue": [100, 149, 237],\r\n\t"cornsilk": [255, 248, 220],\r\n\t"crimson": [220, 20, 60],\r\n\t"cyan": [0, 255, 255],\r\n\t"darkblue": [0, 0, 139],\r\n\t"darkcyan": [0, 139, 139],\r\n\t"darkgoldenrod": [184, 134, 11],\r\n\t"darkgray": [169, 169, 169],\r\n\t"darkgreen": [0, 100, 0],\r\n\t"darkgrey": [169, 169, 169],\r\n\t"darkkhaki": [189, 183, 107],\r\n\t"darkmagenta": [139, 0, 139],\r\n\t"darkolivegreen": [85, 107, 47],\r\n\t"darkorange": [255, 140, 0],\r\n\t"darkorchid": [153, 50, 204],\r\n\t"darkred": [139, 0, 0],\r\n\t"darksalmon": [233, 150, 122],\r\n\t"darkseagreen": [143, 188, 143],\r\n\t"darkslateblue": [72, 61, 139],\r\n\t"darkslategray": [47, 79, 79],\r\n\t"darkslategrey": [47, 79, 79],\r\n\t"darkturquoise": [0, 206, 209],\r\n\t"darkviolet": [148, 0, 211],\r\n\t"deeppink": [255, 20, 147],\r\n\t"deepskyblue": [0, 191, 255],\r\n\t"dimgray": [105, 105, 105],\r\n\t"dimgrey": [105, 105, 105],\r\n\t"dodgerblue": [30, 144, 255],\r\n\t"firebrick": [178, 34, 34],\r\n\t"floralwhite": [255, 250, 240],\r\n\t"forestgreen": [34, 139, 34],\r\n\t"fuchsia": [255, 0, 255],\r\n\t"gainsboro": [220, 220, 220],\r\n\t"ghostwhite": [248, 248, 255],\r\n\t"gold": [255, 215, 0],\r\n\t"goldenrod": [218, 165, 32],\r\n\t"gray": [128, 128, 128],\r\n\t"green": [0, 128, 0],\r\n\t"greenyellow": [173, 255, 47],\r\n\t"grey": [128, 128, 128],\r\n\t"honeydew": [240, 255, 240],\r\n\t"hotpink": [255, 105, 180],\r\n\t"indianred": [205, 92, 92],\r\n\t"indigo": [75, 0, 130],\r\n\t"ivory": [255, 255, 240],\r\n\t"khaki": [240, 230, 140],\r\n\t"lavender": [230, 230, 250],\r\n\t"lavenderblush": [255, 240, 245],\r\n\t"lawngreen": [124, 252, 0],\r\n\t"lemonchiffon": [255, 250, 205],\r\n\t"lightblue": [173, 216, 230],\r\n\t"lightcoral": [240, 128, 128],\r\n\t"lightcyan": [224, 255, 255],\r\n\t"lightgoldenrodyellow": [250, 250, 210],\r\n\t"lightgray": [211, 211, 211],\r\n\t"lightgreen": [144, 238, 144],\r\n\t"lightgrey": [211, 211, 211],\r\n\t"lightpink": [255, 182, 193],\r\n\t"lightsalmon": [255, 160, 122],\r\n\t"lightseagreen": [32, 178, 170],\r\n\t"lightskyblue": [135, 206, 250],\r\n\t"lightslategray": [119, 136, 153],\r\n\t"lightslategrey": [119, 136, 153],\r\n\t"lightsteelblue": [176, 196, 222],\r\n\t"lightyellow": [255, 255, 224],\r\n\t"lime": [0, 255, 0],\r\n\t"limegreen": [50, 205, 50],\r\n\t"linen": [250, 240, 230],\r\n\t"magenta": [255, 0, 255],\r\n\t"maroon": [128, 0, 0],\r\n\t"mediumaquamarine": [102, 205, 170],\r\n\t"mediumblue": [0, 0, 205],\r\n\t"mediumorchid": [186, 85, 211],\r\n\t"mediumpurple": [147, 112, 219],\r\n\t"mediumseagreen": [60, 179, 113],\r\n\t"mediumslateblue": [123, 104, 238],\r\n\t"mediumspringgreen": [0, 250, 154],\r\n\t"mediumturquoise": [72, 209, 204],\r\n\t"mediumvioletred": [199, 21, 133],\r\n\t"midnightblue": [25, 25, 112],\r\n\t"mintcream": [245, 255, 250],\r\n\t"mistyrose": [255, 228, 225],\r\n\t"moccasin": [255, 228, 181],\r\n\t"navajowhite": [255, 222, 173],\r\n\t"navy": [0, 0, 128],\r\n\t"oldlace": [253, 245, 230],\r\n\t"olive": [128, 128, 0],\r\n\t"olivedrab": [107, 142, 35],\r\n\t"orange": [255, 165, 0],\r\n\t"orangered": [255, 69, 0],\r\n\t"orchid": [218, 112, 214],\r\n\t"palegoldenrod": [238, 232, 170],\r\n\t"palegreen": [152, 251, 152],\r\n\t"paleturquoise": [175, 238, 238],\r\n\t"palevioletred": [219, 112, 147],\r\n\t"papayawhip": [255, 239, 213],\r\n\t"peachpuff": [255, 218, 185],\r\n\t"peru": [205, 133, 63],\r\n\t"pink": [255, 192, 203],\r\n\t"plum": [221, 160, 221],\r\n\t"powderblue": [176, 224, 230],\r\n\t"purple": [128, 0, 128],\r\n\t"rebeccapurple": [102, 51, 153],\r\n\t"red": [255, 0, 0],\r\n\t"rosybrown": [188, 143, 143],\r\n\t"royalblue": [65, 105, 225],\r\n\t"saddlebrown": [139, 69, 19],\r\n\t"salmon": [250, 128, 114],\r\n\t"sandybrown": [244, 164, 96],\r\n\t"seagreen": [46, 139, 87],\r\n\t"seashell": [255, 245, 238],\r\n\t"sienna": [160, 82, 45],\r\n\t"silver": [192, 192, 192],\r\n\t"skyblue": [135, 206, 235],\r\n\t"slateblue": [106, 90, 205],\r\n\t"slategray": [112, 128, 144],\r\n\t"slategrey": [112, 128, 144],\r\n\t"snow": [255, 250, 250],\r\n\t"springgreen": [0, 255, 127],\r\n\t"steelblue": [70, 130, 180],\r\n\t"tan": [210, 180, 140],\r\n\t"teal": [0, 128, 128],\r\n\t"thistle": [216, 191, 216],\r\n\t"tomato": [255, 99, 71],\r\n\t"turquoise": [64, 224, 208],\r\n\t"violet": [238, 130, 238],\r\n\t"wheat": [245, 222, 179],\r\n\t"white": [255, 255, 255],\r\n\t"whitesmoke": [245, 245, 245],\r\n\t"yellow": [255, 255, 0],\r\n\t"yellowgreen": [154, 205, 50]\r\n};\n\n//# sourceURL=webpack:///./node_modules/color-convert/node_modules/color-name/index.js?')},"./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/route.js?")},"./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nmodule.exports = {\r\n\t"aliceblue": [240, 248, 255],\r\n\t"antiquewhite": [250, 235, 215],\r\n\t"aqua": [0, 255, 255],\r\n\t"aquamarine": [127, 255, 212],\r\n\t"azure": [240, 255, 255],\r\n\t"beige": [245, 245, 220],\r\n\t"bisque": [255, 228, 196],\r\n\t"black": [0, 0, 0],\r\n\t"blanchedalmond": [255, 235, 205],\r\n\t"blue": [0, 0, 255],\r\n\t"blueviolet": [138, 43, 226],\r\n\t"brown": [165, 42, 42],\r\n\t"burlywood": [222, 184, 135],\r\n\t"cadetblue": [95, 158, 160],\r\n\t"chartreuse": [127, 255, 0],\r\n\t"chocolate": [210, 105, 30],\r\n\t"coral": [255, 127, 80],\r\n\t"cornflowerblue": [100, 149, 237],\r\n\t"cornsilk": [255, 248, 220],\r\n\t"crimson": [220, 20, 60],\r\n\t"cyan": [0, 255, 255],\r\n\t"darkblue": [0, 0, 139],\r\n\t"darkcyan": [0, 139, 139],\r\n\t"darkgoldenrod": [184, 134, 11],\r\n\t"darkgray": [169, 169, 169],\r\n\t"darkgreen": [0, 100, 0],\r\n\t"darkgrey": [169, 169, 169],\r\n\t"darkkhaki": [189, 183, 107],\r\n\t"darkmagenta": [139, 0, 139],\r\n\t"darkolivegreen": [85, 107, 47],\r\n\t"darkorange": [255, 140, 0],\r\n\t"darkorchid": [153, 50, 204],\r\n\t"darkred": [139, 0, 0],\r\n\t"darksalmon": [233, 150, 122],\r\n\t"darkseagreen": [143, 188, 143],\r\n\t"darkslateblue": [72, 61, 139],\r\n\t"darkslategray": [47, 79, 79],\r\n\t"darkslategrey": [47, 79, 79],\r\n\t"darkturquoise": [0, 206, 209],\r\n\t"darkviolet": [148, 0, 211],\r\n\t"deeppink": [255, 20, 147],\r\n\t"deepskyblue": [0, 191, 255],\r\n\t"dimgray": [105, 105, 105],\r\n\t"dimgrey": [105, 105, 105],\r\n\t"dodgerblue": [30, 144, 255],\r\n\t"firebrick": [178, 34, 34],\r\n\t"floralwhite": [255, 250, 240],\r\n\t"forestgreen": [34, 139, 34],\r\n\t"fuchsia": [255, 0, 255],\r\n\t"gainsboro": [220, 220, 220],\r\n\t"ghostwhite": [248, 248, 255],\r\n\t"gold": [255, 215, 0],\r\n\t"goldenrod": [218, 165, 32],\r\n\t"gray": [128, 128, 128],\r\n\t"green": [0, 128, 0],\r\n\t"greenyellow": [173, 255, 47],\r\n\t"grey": [128, 128, 128],\r\n\t"honeydew": [240, 255, 240],\r\n\t"hotpink": [255, 105, 180],\r\n\t"indianred": [205, 92, 92],\r\n\t"indigo": [75, 0, 130],\r\n\t"ivory": [255, 255, 240],\r\n\t"khaki": [240, 230, 140],\r\n\t"lavender": [230, 230, 250],\r\n\t"lavenderblush": [255, 240, 245],\r\n\t"lawngreen": [124, 252, 0],\r\n\t"lemonchiffon": [255, 250, 205],\r\n\t"lightblue": [173, 216, 230],\r\n\t"lightcoral": [240, 128, 128],\r\n\t"lightcyan": [224, 255, 255],\r\n\t"lightgoldenrodyellow": [250, 250, 210],\r\n\t"lightgray": [211, 211, 211],\r\n\t"lightgreen": [144, 238, 144],\r\n\t"lightgrey": [211, 211, 211],\r\n\t"lightpink": [255, 182, 193],\r\n\t"lightsalmon": [255, 160, 122],\r\n\t"lightseagreen": [32, 178, 170],\r\n\t"lightskyblue": [135, 206, 250],\r\n\t"lightslategray": [119, 136, 153],\r\n\t"lightslategrey": [119, 136, 153],\r\n\t"lightsteelblue": [176, 196, 222],\r\n\t"lightyellow": [255, 255, 224],\r\n\t"lime": [0, 255, 0],\r\n\t"limegreen": [50, 205, 50],\r\n\t"linen": [250, 240, 230],\r\n\t"magenta": [255, 0, 255],\r\n\t"maroon": [128, 0, 0],\r\n\t"mediumaquamarine": [102, 205, 170],\r\n\t"mediumblue": [0, 0, 205],\r\n\t"mediumorchid": [186, 85, 211],\r\n\t"mediumpurple": [147, 112, 219],\r\n\t"mediumseagreen": [60, 179, 113],\r\n\t"mediumslateblue": [123, 104, 238],\r\n\t"mediumspringgreen": [0, 250, 154],\r\n\t"mediumturquoise": [72, 209, 204],\r\n\t"mediumvioletred": [199, 21, 133],\r\n\t"midnightblue": [25, 25, 112],\r\n\t"mintcream": [245, 255, 250],\r\n\t"mistyrose": [255, 228, 225],\r\n\t"moccasin": [255, 228, 181],\r\n\t"navajowhite": [255, 222, 173],\r\n\t"navy": [0, 0, 128],\r\n\t"oldlace": [253, 245, 230],\r\n\t"olive": [128, 128, 0],\r\n\t"olivedrab": [107, 142, 35],\r\n\t"orange": [255, 165, 0],\r\n\t"orangered": [255, 69, 0],\r\n\t"orchid": [218, 112, 214],\r\n\t"palegoldenrod": [238, 232, 170],\r\n\t"palegreen": [152, 251, 152],\r\n\t"paleturquoise": [175, 238, 238],\r\n\t"palevioletred": [219, 112, 147],\r\n\t"papayawhip": [255, 239, 213],\r\n\t"peachpuff": [255, 218, 185],\r\n\t"peru": [205, 133, 63],\r\n\t"pink": [255, 192, 203],\r\n\t"plum": [221, 160, 221],\r\n\t"powderblue": [176, 224, 230],\r\n\t"purple": [128, 0, 128],\r\n\t"rebeccapurple": [102, 51, 153],\r\n\t"red": [255, 0, 0],\r\n\t"rosybrown": [188, 143, 143],\r\n\t"royalblue": [65, 105, 225],\r\n\t"saddlebrown": [139, 69, 19],\r\n\t"salmon": [250, 128, 114],\r\n\t"sandybrown": [244, 164, 96],\r\n\t"seagreen": [46, 139, 87],\r\n\t"seashell": [255, 245, 238],\r\n\t"sienna": [160, 82, 45],\r\n\t"silver": [192, 192, 192],\r\n\t"skyblue": [135, 206, 235],\r\n\t"slateblue": [106, 90, 205],\r\n\t"slategray": [112, 128, 144],\r\n\t"slategrey": [112, 128, 144],\r\n\t"snow": [255, 250, 250],\r\n\t"springgreen": [0, 255, 127],\r\n\t"steelblue": [70, 130, 180],\r\n\t"tan": [210, 180, 140],\r\n\t"teal": [0, 128, 128],\r\n\t"thistle": [216, 191, 216],\r\n\t"tomato": [255, 99, 71],\r\n\t"turquoise": [64, 224, 208],\r\n\t"violet": [238, 130, 238],\r\n\t"wheat": [245, 222, 179],\r\n\t"white": [255, 255, 255],\r\n\t"whitesmoke": [245, 245, 245],\r\n\t"yellow": [255, 255, 0],\r\n\t"yellowgreen": [154, 205, 50]\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/color-name/index.js?')},"./node_modules/color-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/color-string/index.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* MIT license */\nvar colorNames = __webpack_require__(/*! color-name */ \"./node_modules/color-name/index.js\");\nvar swizzle = __webpack_require__(/*! simple-swizzle */ \"./node_modules/simple-swizzle/index.js\");\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n//# sourceURL=webpack:///./node_modules/color-string/index.js?")},"./node_modules/color/index.js":
/*!*************************************!*\
  !*** ./node_modules/color/index.js ***!
  \*************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar colorString = __webpack_require__(/*! color-string */ \"./node_modules/color-string/index.js\");\nvar convert = __webpack_require__(/*! color-convert */ \"./node_modules/color-convert/index.js\");\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n//# sourceURL=webpack:///./node_modules/color/index.js?")},"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, ".truesight-color-wheel {\\n  position: absolute; }\\n", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss?./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js')},"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-image/style/truesight-image.scss":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-image/style/truesight-image.scss ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, ".truesight-image {\\n  position: relative; }\\n", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/core/components/truesight-image/style/truesight-image.scss?./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js')},"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-video/style/truesight-video.scss":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-video/style/truesight-video.scss ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, ".truesight-video {\\n  position: relative; }\\n", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/style/truesight-video.scss?./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js')},"./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?')},"./node_modules/hsluv/hsluv.js":
/*!*************************************!*\
  !*** ./node_modules/hsluv/hsluv.js ***!
  \*************************************/
/*! no static exports found */function(module,exports){eval('// Generated by Haxe 3.4.4\nvar hsluv = hsluv || {};\nhsluv.Geometry = function() { };\nhsluv.Geometry.intersectLineLine = function(a,b) {\n\tvar x = (a.intercept - b.intercept) / (b.slope - a.slope);\n\tvar y = a.slope * x + a.intercept;\n\treturn { x : x, y : y};\n};\nhsluv.Geometry.distanceFromOrigin = function(point) {\n\treturn Math.sqrt(Math.pow(point.x,2) + Math.pow(point.y,2));\n};\nhsluv.Geometry.distanceLineFromOrigin = function(line) {\n\treturn Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope,2) + 1);\n};\nhsluv.Geometry.perpendicularThroughPoint = function(line,point) {\n\tvar slope = -1 / line.slope;\n\tvar intercept = point.y - slope * point.x;\n\treturn { slope : slope, intercept : intercept};\n};\nhsluv.Geometry.angleFromOrigin = function(point) {\n\treturn Math.atan2(point.y,point.x);\n};\nhsluv.Geometry.normalizeAngle = function(angle) {\n\tvar m = 2 * Math.PI;\n\treturn (angle % m + m) % m;\n};\nhsluv.Geometry.lengthOfRayUntilIntersect = function(theta,line) {\n\treturn line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n};\nhsluv.Hsluv = function() { };\nhsluv.Hsluv.getBounds = function(L) {\n\tvar result = [];\n\tvar sub1 = Math.pow(L + 16,3) / 1560896;\n\tvar sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar c = _g++;\n\t\tvar m1 = hsluv.Hsluv.m[c][0];\n\t\tvar m2 = hsluv.Hsluv.m[c][1];\n\t\tvar m3 = hsluv.Hsluv.m[c][2];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < 2) {\n\t\t\tvar t = _g1++;\n\t\t\tvar top1 = (284517 * m1 - 94839 * m3) * sub2;\n\t\t\tvar top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n\t\t\tvar bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n\t\t\tresult.push({ slope : top1 / bottom, intercept : top2 / bottom});\n\t\t}\n\t}\n\treturn result;\n};\nhsluv.Hsluv.maxSafeChromaForL = function(L) {\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.distanceLineFromOrigin(bound);\n\t\tmin = Math.min(min,length);\n\t}\n\treturn min;\n};\nhsluv.Hsluv.maxChromaForLH = function(L,H) {\n\tvar hrad = H / 360 * Math.PI * 2;\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad,bound);\n\t\tif(length >= 0) {\n\t\t\tmin = Math.min(min,length);\n\t\t}\n\t}\n\treturn min;\n};\nhsluv.Hsluv.dotProduct = function(a,b) {\n\tvar sum = 0;\n\tvar _g1 = 0;\n\tvar _g = a.length;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tsum += a[i] * b[i];\n\t}\n\treturn sum;\n};\nhsluv.Hsluv.fromLinear = function(c) {\n\tif(c <= 0.0031308) {\n\t\treturn 12.92 * c;\n\t} else {\n\t\treturn 1.055 * Math.pow(c,0.416666666666666685) - 0.055;\n\t}\n};\nhsluv.Hsluv.toLinear = function(c) {\n\tif(c > 0.04045) {\n\t\treturn Math.pow((c + 0.055) / 1.055,2.4);\n\t} else {\n\t\treturn c / 12.92;\n\t}\n};\nhsluv.Hsluv.xyzToRgb = function(tuple) {\n\treturn [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2],tuple))];\n};\nhsluv.Hsluv.rgbToXyz = function(tuple) {\n\tvar rgbl = [hsluv.Hsluv.toLinear(tuple[0]),hsluv.Hsluv.toLinear(tuple[1]),hsluv.Hsluv.toLinear(tuple[2])];\n\treturn [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2],rgbl)];\n};\nhsluv.Hsluv.yToL = function(Y) {\n\tif(Y <= hsluv.Hsluv.epsilon) {\n\t\treturn Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn 116 * Math.pow(Y / hsluv.Hsluv.refY,0.333333333333333315) - 16;\n\t}\n};\nhsluv.Hsluv.lToY = function(L) {\n\tif(L <= 8) {\n\t\treturn hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn hsluv.Hsluv.refY * Math.pow((L + 16) / 116,3);\n\t}\n};\nhsluv.Hsluv.xyzToLuv = function(tuple) {\n\tvar X = tuple[0];\n\tvar Y = tuple[1];\n\tvar Z = tuple[2];\n\tvar divider = X + 15 * Y + 3 * Z;\n\tvar varU = 4 * X;\n\tvar varV = 9 * Y;\n\tif(divider != 0) {\n\t\tvarU /= divider;\n\t\tvarV /= divider;\n\t} else {\n\t\tvarU = NaN;\n\t\tvarV = NaN;\n\t}\n\tvar L = hsluv.Hsluv.yToL(Y);\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar U = 13 * L * (varU - hsluv.Hsluv.refU);\n\tvar V = 13 * L * (varV - hsluv.Hsluv.refV);\n\treturn [L,U,V];\n};\nhsluv.Hsluv.luvToXyz = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar varU = U / (13 * L) + hsluv.Hsluv.refU;\n\tvar varV = V / (13 * L) + hsluv.Hsluv.refV;\n\tvar Y = hsluv.Hsluv.lToY(L);\n\tvar X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n\tvar Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n\treturn [X,Y,Z];\n};\nhsluv.Hsluv.luvToLch = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tvar C = Math.sqrt(U * U + V * V);\n\tvar H;\n\tif(C < 0.00000001) {\n\t\tH = 0;\n\t} else {\n\t\tvar Hrad = Math.atan2(V,U);\n\t\tH = Hrad * 180.0 / Math.PI;\n\t\tif(H < 0) {\n\t\t\tH = 360 + H;\n\t\t}\n\t}\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToLuv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tvar Hrad = H / 360.0 * 2 * Math.PI;\n\tvar U = Math.cos(Hrad) * C;\n\tvar V = Math.sin(Hrad) * C;\n\treturn [L,U,V];\n};\nhsluv.Hsluv.hsluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHsluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.hpluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHpluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.rgbToHex = function(tuple) {\n\tvar h = "#";\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar chan = tuple[i];\n\t\tvar c = Math.round(chan * 255);\n\t\tvar digit2 = c % 16;\n\t\tvar digit1 = (c - digit2) / 16 | 0;\n\t\th += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n\t}\n\treturn h;\n};\nhsluv.Hsluv.hexToRgb = function(hex) {\n\thex = hex.toLowerCase();\n\tvar ret = [];\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));\n\t\tvar digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));\n\t\tvar n = digit1 * 16 + digit2;\n\t\tret.push(n / 255.0);\n\t}\n\treturn ret;\n};\nhsluv.Hsluv.lchToRgb = function(tuple) {\n\treturn hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n};\nhsluv.Hsluv.rgbToLch = function(tuple) {\n\treturn hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n};\nhsluv.Hsluv.hsluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHsluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hpluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHpluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hsluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n};\nhsluv.Hsluv.hpluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n};\nhsluv.Hsluv.hexToHsluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.hexToHpluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.m = [[3.240969941904521,-1.537383177570093,-0.498610760293],[-0.96924363628087,1.87596750150772,0.041555057407175],[0.055630079696993,-0.20397695888897,1.056971514242878]];\nhsluv.Hsluv.minv = [[0.41239079926595,0.35758433938387,0.18048078840183],[0.21263900587151,0.71516867876775,0.072192315360733],[0.019330818715591,0.11919477979462,0.95053215224966]];\nhsluv.Hsluv.refY = 1.0;\nhsluv.Hsluv.refU = 0.19783000664283;\nhsluv.Hsluv.refV = 0.46831999493879;\nhsluv.Hsluv.kappa = 903.2962962;\nhsluv.Hsluv.epsilon = 0.0088564516;\nhsluv.Hsluv.hexChars = "0123456789abcdef";\nvar root = {\n    "hsluvToRgb": hsluv.Hsluv.hsluvToRgb,\n    "rgbToHsluv": hsluv.Hsluv.rgbToHsluv,\n    "hpluvToRgb": hsluv.Hsluv.hpluvToRgb,\n    "rgbToHpluv": hsluv.Hsluv.rgbToHpluv,\n    "hsluvToHex": hsluv.Hsluv.hsluvToHex,\n    "hexToHsluv": hsluv.Hsluv.hexToHsluv,\n    "hpluvToHex": hsluv.Hsluv.hpluvToHex,\n    "hexToHpluv": hsluv.Hsluv.hexToHpluv,\n    "lchToHpluv": hsluv.Hsluv.lchToHpluv,\n    "hpluvToLch": hsluv.Hsluv.hpluvToLch,\n    "lchToHsluv": hsluv.Hsluv.lchToHsluv,\n    "hsluvToLch": hsluv.Hsluv.hsluvToLch,\n    "lchToLuv": hsluv.Hsluv.lchToLuv,\n    "luvToLch": hsluv.Hsluv.luvToLch,\n    "xyzToLuv": hsluv.Hsluv.xyzToLuv,\n    "luvToXyz": hsluv.Hsluv.luvToXyz,\n    "xyzToRgb": hsluv.Hsluv.xyzToRgb,\n    "rgbToXyz": hsluv.Hsluv.rgbToXyz,\n    "lchToRgb": hsluv.Hsluv.lchToRgb,\n    "rgbToLch": hsluv.Hsluv.rgbToLch\n};\n\nmodule.exports = root;\n\n\n//# sourceURL=webpack:///./node_modules/hsluv/hsluv.js?')},"./node_modules/simple-swizzle/index.js":
/*!**********************************************!*\
  !*** ./node_modules/simple-swizzle/index.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar isArrayish = __webpack_require__(/*! is-arrayish */ "./node_modules/simple-swizzle/node_modules/is-arrayish/index.js");\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n//# sourceURL=webpack:///./node_modules/simple-swizzle/index.js?')},"./node_modules/simple-swizzle/node_modules/is-arrayish/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/simple-swizzle/node_modules/is-arrayish/index.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n//# sourceURL=webpack:///./node_modules/simple-swizzle/node_modules/is-arrayish/index.js?")},"./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + " " + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?')},"./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?')},"./node_modules/truesight/dist/truesight.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/truesight/dist/truesight.esm.js ***!
  \******************************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * truesight.esm.js v0.1.1\n * Copyright (c) 2018-present, Chennara Nhes.\n * Released under the MIT License.\n */\nclass RGBColor {\n  constructor(channels) {\n    this.channels = channels;\n  }\n  get red() {\n    return this.channels[RED_CHANNEL_INDEX];\n  }\n  get green() {\n    return this.channels[GREEN_CHANNEL_INDEX];\n  }\n  get blue() {\n    return this.channels[BLUE_CHANNEL_INDEX];\n  }\n}\nconst RED_CHANNEL_INDEX = 0;\nconst GREEN_CHANNEL_INDEX = 1;\nconst BLUE_CHANNEL_INDEX = 2;\n\nfunction loadImage(imageElement, delay = 2000) {\n  const loadImagePromise = new Promise((resolve) => {\n    const onImageLoad = () => {\n      imageElement.removeEventListener('load', onImageLoad);\n      resolve();\n    };\n    imageElement.addEventListener('load', onImageLoad);\n    if (imageElement.complete && imageElement.naturalWidth !== 0) {\n      imageElement.removeEventListener('load', onImageLoad);\n      resolve();\n    }\n  });\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new RangeError(`failed to load the image, timeout of ${delay} ms exceeded`));\n    }, delay);\n  });\n  return Promise.race([loadImagePromise, timeoutPromise]);\n}\n\nvar getImageData = async function getImageData(imageElement) {\n  if (imageElement instanceof HTMLImageElement) {\n    return getImageDataFromHTMLImageElement(imageElement);\n  }\n  return getImageDataFromHTMLCanvasElement(imageElement);\n};\nasync function getImageDataFromHTMLImageElement(imageElement) {\n  await loadImage(imageElement);\n  const canvasElement = drawImageToCanvas(imageElement);\n  const imageData = getImageDataFromHTMLCanvasElement(canvasElement);\n  return imageData;\n}\nfunction drawImageToCanvas(imageElement) {\n  const canvasElement = document.createElement('canvas');\n  canvasElement.width = imageElement.width;\n  canvasElement.height = imageElement.height;\n  const canvasContext = canvasElement.getContext('2d');\n  canvasContext.drawImage(imageElement, 0, 0, imageElement.width, imageElement.height);\n  return canvasElement;\n}\nfunction getImageDataFromHTMLCanvasElement(canvasElement) {\n  const canvasContext = canvasElement.getContext('2d');\n  const imageData = canvasContext.getImageData(0, 0, canvasElement.width, canvasElement.height).data;\n  return imageData;\n}\n\nclass RGBImage {\n  constructor(data) {\n    this.data = data;\n  }\n  static async fromImageElement(imageElement, quality) {\n    const rgbImageData = [];\n    const rgbaImageData = await getImageData(imageElement);\n    const numberOfEntriesToSkip = 4 * (quality - 1);\n    for (let i = numberOfEntriesToSkip; i < rgbaImageData.length; i += 4 + numberOfEntriesToSkip) {\n      const rgbColor = new RGBColor([\n        rgbaImageData[i + RED_CHANNEL_INDEX],\n        rgbaImageData[i + GREEN_CHANNEL_INDEX],\n        rgbaImageData[i + BLUE_CHANNEL_INDEX],\n      ]);\n      rgbImageData.push(rgbColor);\n    }\n    return new RGBImage(rgbImageData);\n  }\n}\n\nfunction hasUnknownProperties(parameters, validProperties) {\n  const properties = Object.keys(parameters);\n  const unknownProperties = properties.filter((property) => !validProperties.includes(property));\n  if (unknownProperties.length !== 0) {\n    return new RangeError(`parameters argument includes unknown property ${unknownProperties[0]}`);\n  }\n  return undefined;\n}\n\nclass Interval {\n  constructor(begin, end) {\n    this.begin = begin;\n    this.end = end;\n  }\n  liesIn(value) {\n    return value >= this.begin && value <= this.end;\n  }\n  toString() {\n    return `[${this.begin}, ${this.end}]`;\n  }\n}\n\nconst HIGHEST_QUALITY = 1;\nconst LOWEST_QUALITY = 25;\nconst VALID_QUALITIES = new Interval(HIGHEST_QUALITY, LOWEST_QUALITY);\nconst DEFAULT_NUMBER_OF_COLORS = 8;\nconst DEFAULT_QUALITY = HIGHEST_QUALITY;\n\nvar validateMedianCutParameters = async function validateMedianCutParameters(parameters) {\n  if (!parameters.imageElement && !parameters.rgbImage) {\n    throw new RangeError('parameters argument should include either imageElement or rgbImage property');\n  }\n  if (parameters.imageElement) {\n    return validateImageElementConfiguration(parameters);\n  }\n  return validateRGBImageConfiguration(parameters);\n};\nasync function validateImageElementConfiguration(parameters) {\n  const unknownProperties = hasUnknownProperties(parameters, ['imageElement', 'numberOfColors', 'quality']);\n  if (unknownProperties instanceof Error) {\n    throw unknownProperties;\n  }\n  const { imageElement } = parameters;\n  if (!(imageElement instanceof HTMLImageElement) && !(imageElement instanceof HTMLCanvasElement)) {\n    throw new TypeError('imageElement property should be of type HTMLImageElement or HTMLCanvasElement');\n  }\n  if (imageElement instanceof HTMLImageElement) {\n    await loadImage(imageElement);\n  }\n  return validateBaseConfiguration(parameters);\n}\nfunction validateRGBImageConfiguration(parameters) {\n  const unknownProperties = hasUnknownProperties(parameters, ['rgbImage', 'numberOfColors', 'quality']);\n  if (unknownProperties instanceof Error) {\n    throw unknownProperties;\n  }\n  const { rgbImage } = parameters;\n  if (!(rgbImage instanceof RGBImage)) {\n    throw new TypeError('image property should be of type RGBImage');\n  }\n  return validateBaseConfiguration(parameters);\n}\nasync function validateBaseConfiguration(parameters) {\n  const { numberOfColors = DEFAULT_NUMBER_OF_COLORS, quality = DEFAULT_QUALITY } = parameters;\n  if (!Number.isInteger(numberOfColors)) {\n    throw new TypeError('numberOfColors property should be an integer');\n  }\n  if (!(numberOfColors >= 1 && numberOfColors <= 256)) {\n    throw new RangeError('numberOfColors property should lie in [1, 256]');\n  }\n  if (!Number.isInteger(quality)) {\n    throw new TypeError('quality property should be an integer');\n  }\n  if (!VALID_QUALITIES.liesIn(quality)) {\n    throw new RangeError(`quality property should lie in ${VALID_QUALITIES.toString()}`);\n  }\n  if (parameters.imageElement) {\n    return { imageElement: parameters.imageElement, numberOfColors, quality };\n  }\n  return { rgbImage: parameters.rgbImage, numberOfColors, quality };\n}\n\nfunction quantizeImage(parameters) {\n  return runMedianCut(parameters, buildInverseColorMap);\n}\nfunction reduceImage(parameters) {\n  return runMedianCut(parameters, buildColorPalette);\n}\nasync function runMedianCut(parameters, buildColorMap) {\n  const validatedParameters = await validateMedianCutParameters(parameters);\n  const rgbImage = await extractRGBImage(validatedParameters);\n  const vboxes = findMostDominantColors(rgbImage, validatedParameters.numberOfColors);\n  const colorMap = buildColorMap(vboxes);\n  return colorMap;\n}\nasync function extractRGBImage(parameters) {\n  return parameters.rgbImage\n    ? parameters.rgbImage\n    : RGBImage.fromImageElement(parameters.imageElement, parameters.quality);\n}\nfunction findMostDominantColors(image, numberOfColors) {\n  let vboxes = [image.data];\n  for (let i = 0; i < numberOfColors - 1; i += 1) {\n    const largestVbox = findLargestVbox(vboxes);\n    const longestAxis = findLongestAxis(largestVbox);\n    const splittedVboxes = splitAlongAxis(largestVbox, longestAxis);\n    vboxes.splice(vboxes.indexOf(largestVbox), 1);\n    vboxes = vboxes.concat(splittedVboxes);\n  }\n  return vboxes;\n}\nfunction findLargestVbox(vboxes) {\n  return vboxes.reduce((previous, current) => (current.length > previous.length ? current : previous));\n}\nfunction findLongestAxis(vbox) {\n  class RGBColorAxis {\n    constructor(axis) {\n      this.axis = axis;\n      this.minMax = [255, 0];\n    }\n    updateMinMax(value) {\n      this.minMax = [Math.min(value, this.minMax[0]), Math.max(value, this.minMax[1])];\n    }\n    get width() {\n      return this.minMax[1] - this.minMax[0];\n    }\n  }\n  const rgbColorAxes = [\n    new RGBColorAxis(RED_CHANNEL_INDEX),\n    new RGBColorAxis(GREEN_CHANNEL_INDEX),\n    new RGBColorAxis(BLUE_CHANNEL_INDEX),\n  ];\n  vbox.forEach((color) => {\n    rgbColorAxes[RED_CHANNEL_INDEX].updateMinMax(color.red);\n    rgbColorAxes[GREEN_CHANNEL_INDEX].updateMinMax(color.green);\n    rgbColorAxes[BLUE_CHANNEL_INDEX].updateMinMax(color.blue);\n  });\n  const longestAxis = rgbColorAxes.reduce((previous, current) => (current.width > previous.width ? current : previous));\n  return longestAxis.axis;\n}\nfunction splitAlongAxis(vbox, axis) {\n  const median = findAxisMedian(vbox, axis);\n  const vboxes = splitOnAxisMedian(vbox, axis, median);\n  return vboxes;\n}\nfunction findAxisMedian(vbox, axis) {\n  const extractedChannelValues = vbox\n    .map((color) => color.channels[axis])\n    .sort((previous, current) => previous - current);\n  const median = extractedChannelValues[Math.floor(extractedChannelValues.length / 2) - 1];\n  return median;\n}\nfunction splitOnAxisMedian(vbox, axis, median) {\n  const groupByAxisMedian = (color) => (color.channels[axis] <= median ? 0 : 1);\n  const vboxes = vbox.reduce(\n    (accumulator, color) => {\n      accumulator[groupByAxisMedian(color)].push(color);\n      return accumulator;\n    },\n    [[], []]\n  );\n  return vboxes;\n}\nfunction buildInverseColorMap(vboxes) {\n  const inverseColorMap = vboxes.map((vbox) => {\n    const representativeColor = findRepresentativeColor(vbox);\n    return vbox.map((color) => ({\n      sourceColor: color,\n      representativeColor,\n    }));\n  });\n  return [].concat(...inverseColorMap);\n}\nfunction buildColorPalette(vboxes) {\n  return vboxes.map((vbox) => ({\n    color: findRepresentativeColor(vbox),\n    population: vbox.length,\n  }));\n}\nfunction findRepresentativeColor(vbox) {\n  const colorSum = vbox.reduce(\n    (accumulator, color) => [\n      accumulator[RED_CHANNEL_INDEX] + color.red,\n      accumulator[GREEN_CHANNEL_INDEX] + color.green,\n      accumulator[BLUE_CHANNEL_INDEX] + color.blue,\n    ],\n    [0, 0, 0]\n  );\n  const colorAverage = colorSum.map((channelSum) => Math.floor(channelSum / vbox.length + 0.5));\n  return new RGBColor([\n    colorAverage[RED_CHANNEL_INDEX],\n    colorAverage[GREEN_CHANNEL_INDEX],\n    colorAverage[BLUE_CHANNEL_INDEX],\n  ]);\n}\n\nclass HSLuvColor {\n  constructor(channels) {\n    this.channels = channels;\n  }\n  toString() {\n    return this.channels.toString();\n  }\n  static fromString(colorString) {\n    const channels = colorString.split(',').map(Number);\n    const color = new HSLuvColor([channels[0], channels[1], channels[2]]);\n    return color;\n  }\n  get hue() {\n    return this.channels[HUE_CHANNEL_INDEX];\n  }\n  get saturation() {\n    return this.channels[SATURATION_CHANNEL_INDEX];\n  }\n  get lightness() {\n    return this.channels[LIGHTNESS_CHANNEL_INDEX];\n  }\n}\nconst HUE_CHANNEL_INDEX = 0;\nconst SATURATION_CHANNEL_INDEX = 1;\nconst LIGHTNESS_CHANNEL_INDEX = 2;\n\nvar hsluv = hsluv || {};\nhsluv.Geometry = function() {};\nhsluv.Geometry.intersectLineLine = function(a, b) {\n  var x = (a.intercept - b.intercept) / (b.slope - a.slope);\n  var y = a.slope * x + a.intercept;\n  return { x: x, y: y };\n};\nhsluv.Geometry.distanceFromOrigin = function(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n};\nhsluv.Geometry.distanceLineFromOrigin = function(line) {\n  return Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope, 2) + 1);\n};\nhsluv.Geometry.perpendicularThroughPoint = function(line, point) {\n  var slope = -1 / line.slope;\n  var intercept = point.y - slope * point.x;\n  return { slope: slope, intercept: intercept };\n};\nhsluv.Geometry.angleFromOrigin = function(point) {\n  return Math.atan2(point.y, point.x);\n};\nhsluv.Geometry.normalizeAngle = function(angle) {\n  var m = 2 * Math.PI;\n  return (angle % m + m) % m;\n};\nhsluv.Geometry.lengthOfRayUntilIntersect = function(theta, line) {\n  return line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n};\nhsluv.Hsluv = function() {};\nhsluv.Hsluv.getBounds = function(L) {\n  var result = [];\n  var sub1 = Math.pow(L + 16, 3) / 1560896;\n  var sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n  var _g = 0;\n  while (_g < 3) {\n    var c = _g++;\n    var m1 = hsluv.Hsluv.m[c][0];\n    var m2 = hsluv.Hsluv.m[c][1];\n    var m3 = hsluv.Hsluv.m[c][2];\n    var _g1 = 0;\n    while (_g1 < 2) {\n      var t = _g1++;\n      var top1 = (284517 * m1 - 94839 * m3) * sub2;\n      var top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n      var bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n      result.push({ slope: top1 / bottom, intercept: top2 / bottom });\n    }\n  }\n  return result;\n};\nhsluv.Hsluv.maxSafeChromaForL = function(L) {\n  var bounds = hsluv.Hsluv.getBounds(L);\n  var min = Infinity;\n  var _g = 0;\n  while (_g < bounds.length) {\n    var bound = bounds[_g];\n    ++_g;\n    var length = hsluv.Geometry.distanceLineFromOrigin(bound);\n    min = Math.min(min, length);\n  }\n  return min;\n};\nhsluv.Hsluv.maxChromaForLH = function(L, H) {\n  var hrad = H / 360 * Math.PI * 2;\n  var bounds = hsluv.Hsluv.getBounds(L);\n  var min = Infinity;\n  var _g = 0;\n  while (_g < bounds.length) {\n    var bound = bounds[_g];\n    ++_g;\n    var length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad, bound);\n    if (length >= 0) {\n      min = Math.min(min, length);\n    }\n  }\n  return min;\n};\nhsluv.Hsluv.dotProduct = function(a, b) {\n  var sum = 0;\n  var _g1 = 0;\n  var _g = a.length;\n  while (_g1 < _g) {\n    var i = _g1++;\n    sum += a[i] * b[i];\n  }\n  return sum;\n};\nhsluv.Hsluv.fromLinear = function(c) {\n  if (c <= 0.0031308) {\n    return 12.92 * c;\n  } else {\n    return 1.055 * Math.pow(c, 0.416666666666666685) - 0.055;\n  }\n};\nhsluv.Hsluv.toLinear = function(c) {\n  if (c > 0.04045) {\n    return Math.pow((c + 0.055) / 1.055, 2.4);\n  } else {\n    return c / 12.92;\n  }\n};\nhsluv.Hsluv.xyzToRgb = function(tuple) {\n  return [\n    hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0], tuple)),\n    hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1], tuple)),\n    hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2], tuple)),\n  ];\n};\nhsluv.Hsluv.rgbToXyz = function(tuple) {\n  var rgbl = [hsluv.Hsluv.toLinear(tuple[0]), hsluv.Hsluv.toLinear(tuple[1]), hsluv.Hsluv.toLinear(tuple[2])];\n  return [\n    hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0], rgbl),\n    hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1], rgbl),\n    hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2], rgbl),\n  ];\n};\nhsluv.Hsluv.yToL = function(Y) {\n  if (Y <= hsluv.Hsluv.epsilon) {\n    return Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n  } else {\n    return 116 * Math.pow(Y / hsluv.Hsluv.refY, 0.333333333333333315) - 16;\n  }\n};\nhsluv.Hsluv.lToY = function(L) {\n  if (L <= 8) {\n    return hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n  } else {\n    return hsluv.Hsluv.refY * Math.pow((L + 16) / 116, 3);\n  }\n};\nhsluv.Hsluv.xyzToLuv = function(tuple) {\n  var X = tuple[0];\n  var Y = tuple[1];\n  var Z = tuple[2];\n  var divider = X + 15 * Y + 3 * Z;\n  var varU = 4 * X;\n  var varV = 9 * Y;\n  if (divider != 0) {\n    varU /= divider;\n    varV /= divider;\n  } else {\n    varU = NaN;\n    varV = NaN;\n  }\n  var L = hsluv.Hsluv.yToL(Y);\n  if (L == 0) {\n    return [0, 0, 0];\n  }\n  var U = 13 * L * (varU - hsluv.Hsluv.refU);\n  var V = 13 * L * (varV - hsluv.Hsluv.refV);\n  return [L, U, V];\n};\nhsluv.Hsluv.luvToXyz = function(tuple) {\n  var L = tuple[0];\n  var U = tuple[1];\n  var V = tuple[2];\n  if (L == 0) {\n    return [0, 0, 0];\n  }\n  var varU = U / (13 * L) + hsluv.Hsluv.refU;\n  var varV = V / (13 * L) + hsluv.Hsluv.refV;\n  var Y = hsluv.Hsluv.lToY(L);\n  var X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n  var Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n  return [X, Y, Z];\n};\nhsluv.Hsluv.luvToLch = function(tuple) {\n  var L = tuple[0];\n  var U = tuple[1];\n  var V = tuple[2];\n  var C = Math.sqrt(U * U + V * V);\n  var H;\n  if (C < 0.00000001) {\n    H = 0;\n  } else {\n    var Hrad = Math.atan2(V, U);\n    H = Hrad * 180.0 / Math.PI;\n    if (H < 0) {\n      H = 360 + H;\n    }\n  }\n  return [L, C, H];\n};\nhsluv.Hsluv.lchToLuv = function(tuple) {\n  var L = tuple[0];\n  var C = tuple[1];\n  var H = tuple[2];\n  var Hrad = H / 360.0 * 2 * Math.PI;\n  var U = Math.cos(Hrad) * C;\n  var V = Math.sin(Hrad) * C;\n  return [L, U, V];\n};\nhsluv.Hsluv.hsluvToLch = function(tuple) {\n  var H = tuple[0];\n  var S = tuple[1];\n  var L = tuple[2];\n  if (L > 99.9999999) {\n    return [100, 0, H];\n  }\n  if (L < 0.00000001) {\n    return [0, 0, H];\n  }\n  var max = hsluv.Hsluv.maxChromaForLH(L, H);\n  var C = max / 100 * S;\n  return [L, C, H];\n};\nhsluv.Hsluv.lchToHsluv = function(tuple) {\n  var L = tuple[0];\n  var C = tuple[1];\n  var H = tuple[2];\n  if (L > 99.9999999) {\n    return [H, 0, 100];\n  }\n  if (L < 0.00000001) {\n    return [H, 0, 0];\n  }\n  var max = hsluv.Hsluv.maxChromaForLH(L, H);\n  var S = C / max * 100;\n  return [H, S, L];\n};\nhsluv.Hsluv.hpluvToLch = function(tuple) {\n  var H = tuple[0];\n  var S = tuple[1];\n  var L = tuple[2];\n  if (L > 99.9999999) {\n    return [100, 0, H];\n  }\n  if (L < 0.00000001) {\n    return [0, 0, H];\n  }\n  var max = hsluv.Hsluv.maxSafeChromaForL(L);\n  var C = max / 100 * S;\n  return [L, C, H];\n};\nhsluv.Hsluv.lchToHpluv = function(tuple) {\n  var L = tuple[0];\n  var C = tuple[1];\n  var H = tuple[2];\n  if (L > 99.9999999) {\n    return [H, 0, 100];\n  }\n  if (L < 0.00000001) {\n    return [H, 0, 0];\n  }\n  var max = hsluv.Hsluv.maxSafeChromaForL(L);\n  var S = C / max * 100;\n  return [H, S, L];\n};\nhsluv.Hsluv.rgbToHex = function(tuple) {\n  var h = '#';\n  var _g = 0;\n  while (_g < 3) {\n    var i = _g++;\n    var chan = tuple[i];\n    var c = Math.round(chan * 255);\n    var digit2 = c % 16;\n    var digit1 = ((c - digit2) / 16) | 0;\n    h += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n  }\n  return h;\n};\nhsluv.Hsluv.hexToRgb = function(hex) {\n  hex = hex.toLowerCase();\n  var ret = [];\n  var _g = 0;\n  while (_g < 3) {\n    var i = _g++;\n    var digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));\n    var digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));\n    var n = digit1 * 16 + digit2;\n    ret.push(n / 255.0);\n  }\n  return ret;\n};\nhsluv.Hsluv.lchToRgb = function(tuple) {\n  return hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n};\nhsluv.Hsluv.rgbToLch = function(tuple) {\n  return hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n};\nhsluv.Hsluv.hsluvToRgb = function(tuple) {\n  return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHsluv = function(tuple) {\n  return hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hpluvToRgb = function(tuple) {\n  return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHpluv = function(tuple) {\n  return hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hsluvToHex = function(tuple) {\n  return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n};\nhsluv.Hsluv.hpluvToHex = function(tuple) {\n  return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n};\nhsluv.Hsluv.hexToHsluv = function(s) {\n  return hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.hexToHpluv = function(s) {\n  return hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.m = [\n  [3.240969941904521, -1.537383177570093, -0.498610760293],\n  [-0.96924363628087, 1.87596750150772, 0.041555057407175],\n  [0.055630079696993, -0.20397695888897, 1.056971514242878],\n];\nhsluv.Hsluv.minv = [\n  [0.41239079926595, 0.35758433938387, 0.18048078840183],\n  [0.21263900587151, 0.71516867876775, 0.072192315360733],\n  [0.019330818715591, 0.11919477979462, 0.95053215224966],\n];\nhsluv.Hsluv.refY = 1.0;\nhsluv.Hsluv.refU = 0.19783000664283;\nhsluv.Hsluv.refV = 0.46831999493879;\nhsluv.Hsluv.kappa = 903.2962962;\nhsluv.Hsluv.epsilon = 0.0088564516;\nhsluv.Hsluv.hexChars = '0123456789abcdef';\nvar root = {\n  hsluvToRgb: hsluv.Hsluv.hsluvToRgb,\n  rgbToHsluv: hsluv.Hsluv.rgbToHsluv,\n  hpluvToRgb: hsluv.Hsluv.hpluvToRgb,\n  rgbToHpluv: hsluv.Hsluv.rgbToHpluv,\n  hsluvToHex: hsluv.Hsluv.hsluvToHex,\n  hexToHsluv: hsluv.Hsluv.hexToHsluv,\n  hpluvToHex: hsluv.Hsluv.hpluvToHex,\n  hexToHpluv: hsluv.Hsluv.hexToHpluv,\n  lchToHpluv: hsluv.Hsluv.lchToHpluv,\n  hpluvToLch: hsluv.Hsluv.hpluvToLch,\n  lchToHsluv: hsluv.Hsluv.lchToHsluv,\n  hsluvToLch: hsluv.Hsluv.hsluvToLch,\n  lchToLuv: hsluv.Hsluv.lchToLuv,\n  luvToLch: hsluv.Hsluv.luvToLch,\n  xyzToLuv: hsluv.Hsluv.xyzToLuv,\n  luvToXyz: hsluv.Hsluv.luvToXyz,\n  xyzToRgb: hsluv.Hsluv.xyzToRgb,\n  rgbToXyz: hsluv.Hsluv.rgbToXyz,\n  lchToRgb: hsluv.Hsluv.lchToRgb,\n  rgbToLch: hsluv.Hsluv.rgbToLch,\n};\nvar hsluv_1 = root;\n\nfunction rgbToHSLuvColor(color) {\n  const rgbChannels = color.channels.map((channel) => channel / 255);\n  const hsluvChannels = hsluv_1.rgbToHsluv(rgbChannels);\n  const hsluvColor = new HSLuvColor(hsluvChannels);\n  return hsluvColor;\n}\nfunction hsluvToRgbColor(color) {\n  const rgbChannels = hsluv_1.hsluvToRgb(color.channels).map((channel) => Math.floor(channel * 255 + 0.5));\n  const rgbColor = new RGBColor(rgbChannels);\n  return rgbColor;\n}\n\nclass HSLuvImage {\n  constructor(data) {\n    this.data = data;\n  }\n  static async fromImageElement(imageElement, quality) {\n    const hsluvImageData = [];\n    const rgbaImageData = await getImageData(imageElement);\n    const numberOfEntriesToSkip = 4 * (quality - 1);\n    for (let i = numberOfEntriesToSkip; i < rgbaImageData.length; i += 4 + numberOfEntriesToSkip) {\n      const rgbChannels = [\n        rgbaImageData[i + RED_CHANNEL_INDEX],\n        rgbaImageData[i + GREEN_CHANNEL_INDEX],\n        rgbaImageData[i + BLUE_CHANNEL_INDEX],\n      ];\n      const rgbColor = new RGBColor(rgbChannels);\n      const hsluvColor = rgbToHSLuvColor(rgbColor);\n      hsluvImageData.push(hsluvColor);\n    }\n    return new HSLuvImage(hsluvImageData);\n  }\n  static fromRGBImage(rgbImage, quality) {\n    const hsluvImageData = [];\n    const numberOfPixelsToSkip = quality - 1;\n    for (let i = numberOfPixelsToSkip; i < rgbImage.data.length; i += 1 + numberOfPixelsToSkip) {\n      const rgbChannels = [rgbImage.data[i].red, rgbImage.data[i].green, rgbImage.data[i].blue];\n      const rgbColor = new RGBColor(rgbChannels);\n      const hsluvColor = rgbToHSLuvColor(rgbColor);\n      hsluvImageData.push(hsluvColor);\n    }\n    return new HSLuvImage(hsluvImageData);\n  }\n}\n\nconst DEFAULT_REGION_SIZE = [15, 18, 18];\nconst VALID_HUE_REGION_SIZES = new Interval(1, 360);\nconst VALID_SATURATION_REGION_SIZES = new Interval(1, 100);\nconst VALID_LIGTHNESS_REGION_SIZES = new Interval(1, 100);\n\nvar _extends =\n  Object.assign ||\n  function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\nvar validatePopularityParameters = async function validatePopularityParameters(parameters) {\n  const unknownProperties = hasUnknownPopularityProperties(parameters);\n  if (unknownProperties instanceof Error) {\n    throw unknownProperties;\n  }\n  const { regionSize = DEFAULT_REGION_SIZE } = parameters;\n  if (regionSize.length !== 3) {\n    throw new TypeError('regionSize property should be of type [number, number, number]');\n  }\n  const [hue, saturation, lightness] = regionSize;\n  if (!Number.isInteger(hue)) {\n    throw new TypeError('hue in regionSize property should be an integer');\n  }\n  if (!VALID_HUE_REGION_SIZES.liesIn(hue)) {\n    throw new RangeError(`hue in regionSize property should lie in ${VALID_HUE_REGION_SIZES.toString()}`);\n  }\n  if (!Number.isInteger(saturation)) {\n    throw new TypeError('saturation in regionSize property should be an integer');\n  }\n  if (!VALID_SATURATION_REGION_SIZES.liesIn(saturation)) {\n    throw new RangeError(`saturation in regionSize property should lie in ${VALID_SATURATION_REGION_SIZES.toString()}`);\n  }\n  if (!Number.isInteger(lightness)) {\n    throw new TypeError('lightness in regionSize property should be an integer');\n  }\n  if (!VALID_LIGTHNESS_REGION_SIZES.liesIn(lightness)) {\n    throw new RangeError(`lightness in regionSize property should lie in ${VALID_LIGTHNESS_REGION_SIZES.toString()}`);\n  }\n  const validatedBaseParameters = await validateBaseParameters(parameters);\n  return _extends({}, validatedBaseParameters, { regionSize });\n};\nfunction hasUnknownPopularityProperties(parameters) {\n  if (parameters.imageElement) {\n    return hasUnknownProperties(parameters, ['imageElement', 'numberOfColors', 'quality', 'regionSize']);\n  }\n  return hasUnknownProperties(parameters, ['rgbImage', 'numberOfColors', 'quality', 'regionSize']);\n}\nfunction validateBaseParameters(parameters) {\n  if (parameters.imageElement) {\n    const { imageElement, numberOfColors, quality } = parameters;\n    return validateMedianCutParameters({ imageElement, numberOfColors, quality });\n  }\n  const { rgbImage, numberOfColors, quality } = parameters;\n  return validateMedianCutParameters({ rgbImage, numberOfColors, quality });\n}\n\nconst BLACK_LIGHTNESS_UPPER_BOUND = 5;\nconst WHITE_LIGHTNESS_LOWER_BOUND = 95;\nconst GRAY_SATURATION_UPPER_BOUND = 10;\nfunction mapColorToRegionID(color, regionSize) {\n  const representativeColor = color;\n  if (color.lightness >= 0 && color.lightness < BLACK_LIGHTNESS_UPPER_BOUND) {\n    representativeColor.channels = [0, 0, 0];\n  } else if (color.lightness > WHITE_LIGHTNESS_LOWER_BOUND && color.lightness <= 100) {\n    representativeColor.channels = [0, 0, 100];\n  } else if (color.saturation >= 0 && color.saturation < GRAY_SATURATION_UPPER_BOUND) {\n    representativeColor.channels = [0, 0, color.lightness];\n  }\n  const hueIntervals = [];\n  for (let i = 0; i < 360 + regionSize[HUE_CHANNEL_INDEX]; i += regionSize[HUE_CHANNEL_INDEX]) {\n    hueIntervals.push(Math.min(i, 360));\n  }\n  const saturationIntervals = [0];\n  for (\n    let i = GRAY_SATURATION_UPPER_BOUND;\n    i < 100 + regionSize[SATURATION_CHANNEL_INDEX];\n    i += regionSize[SATURATION_CHANNEL_INDEX]\n  ) {\n    saturationIntervals.push(Math.min(i, 100));\n  }\n  const lightnessIntervals = [0];\n  for (\n    let i = BLACK_LIGHTNESS_UPPER_BOUND;\n    i < WHITE_LIGHTNESS_LOWER_BOUND + regionSize[LIGHTNESS_CHANNEL_INDEX];\n    i += regionSize[LIGHTNESS_CHANNEL_INDEX]\n  ) {\n    lightnessIntervals.push(Math.min(i, WHITE_LIGHTNESS_LOWER_BOUND));\n  }\n  lightnessIntervals.push(100);\n  return [\n    mapChannelToRegionID(hueIntervals, representativeColor.hue),\n    mapChannelToRegionID(saturationIntervals, representativeColor.saturation),\n    mapChannelToRegionID(lightnessIntervals, representativeColor.lightness),\n  ].join(',');\n}\nfunction mapChannelToRegionID(intervals, channel) {\n  let i = channel === 0 ? 1 : 0;\n  while (channel > intervals[i] && i < intervals.length) {\n    i += 1;\n  }\n  return [intervals[i - 1], intervals[i]].toString();\n}\n\nvar popularizeImage = async function popularizeImage(parameters) {\n  const validatedParameters = await validatePopularityParameters(parameters);\n  const hsluvImage = await extractHSLuvImage(validatedParameters);\n  const colorPalette = buildColorPalette$1(\n    hsluvImage,\n    validatedParameters.regionSize,\n    validatedParameters.numberOfColors\n  );\n  return colorPalette;\n};\nasync function extractHSLuvImage(parameters) {\n  return parameters.rgbImage\n    ? HSLuvImage.fromRGBImage(parameters.rgbImage, parameters.quality)\n    : HSLuvImage.fromImageElement(parameters.imageElement, parameters.quality);\n}\nfunction buildColorPalette$1(image, regionSize, numberOfColors) {\n  const histogram = buildHistogram(image, regionSize);\n  const colorPalette = findMostDominantColors$1(histogram, numberOfColors);\n  return colorPalette;\n}\nfunction buildHistogram(image, regionSize) {\n  const histogram = new Map();\n  image.data.forEach((color) => {\n    const regionID = mapColorToRegionID(color, regionSize);\n    const colorID = color.toString();\n    const regionHistogram = histogram.get(regionID);\n    if (!regionHistogram) {\n      histogram.set(regionID, new Map([[colorID, 1]]));\n    } else {\n      const colorPopulation = regionHistogram.get(colorID);\n      if (!colorPopulation) {\n        regionHistogram.set(colorID, 1);\n      } else {\n        regionHistogram.set(colorID, colorPopulation + 1);\n      }\n    }\n  });\n  return Array.from(histogram.entries()).map((region) => [\n    region[0],\n    Array.from(region[1].entries()).map((color) => [color[0], color[1]]),\n  ]);\n}\nfunction findMostDominantColors$1(histogram, numberOfColors) {\n  const mostDominantRegions = findMostDominantRegions(histogram, numberOfColors);\n  const mostDominantColors = mostDominantRegions.map((region) => findMostDominantColor(region[1]));\n  return mostDominantColors;\n}\nfunction findMostDominantRegions(histogram, numberOfColors) {\n  const regions = histogram.map((region) => ({\n    regionID: region[0],\n    population: getRegionPopulation(region[1]),\n  }));\n  regions.sort((previous, current) => current.population - previous.population);\n  const mostDominantRegionIDs = regions.slice(0, numberOfColors).map((region) => region.regionID);\n  const mostDominantRegions = histogram.filter((region) => mostDominantRegionIDs.includes(region[0]));\n  return mostDominantRegions;\n}\nfunction findMostDominantColor(histogram) {\n  const mostDominantColorEntry = histogram\n    .map((color) => ({\n      color: HSLuvColor.fromString(color[0]),\n      population: color[1],\n    }))\n    .reduce((previous, current) => (current.population > previous.population ? current : previous));\n  return {\n    color: hsluvToRgbColor(mostDominantColorEntry.color),\n    population: getRegionPopulation(histogram),\n  };\n}\nfunction getRegionPopulation(histogram) {\n  return histogram.reduce((accumulator, color) => accumulator + color[1], 0);\n}\n\nvar ImageQuantizationAPI = {\n  quantizeImage,\n  reduceImage,\n  popularizeImage,\n};\n\nclass AsyncQueue {\n  constructor() {\n    this.values = [];\n    this.settlers = [];\n    this.closed = false;\n  }\n  enqueue(value) {\n    if (this.closed) {\n      throw new Error('unable to enqueue a task onto a closed queue');\n    } else if (this.settlers.length === 0) {\n      this.values.push(value);\n    } else {\n      const settler = this.settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({ done: false, value });\n      }\n    }\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  async next() {\n    if (this.values.length > 0) {\n      const value = this.values.shift();\n      if (value instanceof Error) {\n        throw value;\n      }\n      return { done: false, value };\n    } else if (this.closed) {\n      return { done: true };\n    }\n    return new Promise((resolve, reject) => {\n      this.settlers.push({ resolve, reject });\n    });\n  }\n  close() {\n    if (this.settlers.length > 0) {\n      const settler = this.settlers.shift();\n      settler.resolve({ done: true });\n    }\n    this.closed = true;\n  }\n}\n\nfunction loadVideo(videoElement, delay = 2000) {\n  const loadVideoPromise = new Promise((resolve) => {\n    const onVideoLoad = () => {\n      videoElement.removeEventListener('loadeddata', onVideoLoad);\n      resolve();\n    };\n    videoElement.addEventListener('loadeddata', onVideoLoad);\n    if (videoElement.readyState === 4) {\n      videoElement.removeEventListener('loadeddata', onVideoLoad);\n      resolve();\n    }\n  });\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new RangeError(`failed to load the video, timeout of ${delay} ms exceeded`));\n    }, delay);\n  });\n  return Promise.race([loadVideoPromise, timeoutPromise]);\n}\n\nconst DEFAULT_SECONDS_BETWEEN_FRAMES = 1;\n\nvar validateParameters = async function validateVideoParsingParameters(parameters) {\n  const unknownProperties = hasUnknownProperties(parameters, ['videoElement', 'secondsBetweenFrames']);\n  if (unknownProperties instanceof Error) {\n    throw unknownProperties;\n  }\n  const { videoElement, secondsBetweenFrames = DEFAULT_SECONDS_BETWEEN_FRAMES } = parameters;\n  if (!videoElement) {\n    throw new RangeError('parameters argument should include videoElement property');\n  }\n  if (!(videoElement instanceof HTMLVideoElement)) {\n    throw new TypeError('videoElement property should be of type HTMLVideoElement');\n  }\n  await loadVideo(videoElement);\n  if (videoElement.width === 0) {\n    throw new RangeError('width attribute in videoElement property is 0');\n  }\n  if (videoElement.height === 0) {\n    throw new RangeError('height attribute in videoElement property is 0');\n  }\n  if (!Number.isFinite(secondsBetweenFrames)) {\n    throw new TypeError('secondsBetweenFrames property should be a number');\n  }\n  if (secondsBetweenFrames <= 0) {\n    throw new RangeError('secondsBetweenFrames property should be greater than 0');\n  }\n  return { videoElement, secondsBetweenFrames };\n};\n\nvar parseVideo = async function* parseVideo(parameters, parseFrame) {\n  const validatedParameters = await validateParameters(parameters);\n  yield* parseFrames(validatedParameters, parseFrame);\n};\nasync function* parseFrames(parameters, parseFrame) {\n  const parsingResults = new AsyncQueue();\n  const videoElement = parameters.videoElement.cloneNode();\n  videoElement.preload = 'auto';\n  await loadVideo(videoElement);\n  let currentTime = 0;\n  let index = 0;\n  videoElement.currentTime = currentTime;\n  const parseNextFrame = async () => {\n    const canvasElement = drawFrameToCanvas(videoElement);\n    let parsingResult;\n    try {\n      parsingResult = await parseFrame(canvasElement);\n    } catch (error) {\n      parsingResult = error;\n    }\n    parsingResults.enqueue({\n      index,\n      timestamp: currentTime,\n      result: parsingResult,\n    });\n    currentTime += parameters.secondsBetweenFrames;\n    index += 1;\n    if (currentTime <= videoElement.duration) {\n      videoElement.currentTime = currentTime;\n    } else {\n      parsingResults.close();\n      videoElement.removeEventListener('seeked', parseNextFrame);\n    }\n  };\n  await parseNextFrame();\n  videoElement.addEventListener('seeked', parseNextFrame);\n  yield* getNextParsingResult(parsingResults);\n}\nfunction drawFrameToCanvas(videoElement) {\n  const canvasElement = document.createElement('canvas');\n  canvasElement.width = videoElement.width;\n  canvasElement.height = videoElement.height;\n  const canvasContext = canvasElement.getContext('2d');\n  canvasContext.drawImage(videoElement, 0, 0, videoElement.width, videoElement.height);\n  return canvasElement;\n}\nasync function* getNextParsingResult(parsingResults) {\n  const parsingResult = await parsingResults.next();\n  if (!parsingResult.done) {\n    yield parsingResult.value;\n    yield* getNextParsingResult(parsingResults);\n  }\n}\n\nfunction quantizeVideo(parameters) {\n  const [videoParsingParameters, medianCutBaseParameters] = extractParameters(parameters);\n  const quantizeImageWrapper = (canvasElement) =>\n    quantizeImage(\n      _extends(\n        {\n          imageElement: canvasElement,\n        },\n        medianCutBaseParameters\n      )\n    );\n  return parseVideo(videoParsingParameters, quantizeImageWrapper);\n}\nfunction reduceVideo(parameters) {\n  const [videoParsingParameters, medianCutBaseParameters] = extractParameters(parameters);\n  const reduceImageWrapper = (canvasElement) =>\n    reduceImage(\n      _extends(\n        {\n          imageElement: canvasElement,\n        },\n        medianCutBaseParameters\n      )\n    );\n  return parseVideo(videoParsingParameters, reduceImageWrapper);\n}\nfunction extractParameters(parameters) {\n  const { videoElement, secondsBetweenFrames, numberOfColors, quality } = parameters;\n  return [{ videoElement, secondsBetweenFrames }, { numberOfColors, quality }];\n}\n\nfunction popularizeVideo(parameters) {\n  const [videoParsingParameters, medianCutBaseParameters] = extractParameters$1(parameters);\n  const popularizeImageWrapper = (canvasElement) =>\n    popularizeImage(\n      _extends(\n        {\n          imageElement: canvasElement,\n        },\n        medianCutBaseParameters\n      )\n    );\n  return parseVideo(videoParsingParameters, popularizeImageWrapper);\n}\nfunction extractParameters$1(parameters) {\n  const { videoElement, secondsBetweenFrames, numberOfColors, quality, regionSize } = parameters;\n  return [{ videoElement, secondsBetweenFrames }, { numberOfColors, quality, regionSize }];\n}\n\nvar VideoQuantizationAPI = {\n  quantizeVideo,\n  reduceVideo,\n  popularizeVideo,\n};\n\nvar index = _extends(\n  {\n    RGBColor,\n    RGBImage,\n  },\n  ImageQuantizationAPI,\n  VideoQuantizationAPI\n);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n\n//# sourceURL=webpack:///./node_modules/truesight/dist/truesight.esm.js?")},"./src/core/components/truesight-color-wheel/core/calculate-dimensions.js":
/*!********************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/core/calculate-dimensions.js ***!
  \********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.calculateR = calculateR;\nfunction calculateR(width) {\n  return 0.425 * width;\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/core/calculate-dimensions.js?')},"./src/core/components/truesight-color-wheel/core/color-wheel.js":
/*!***********************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/core/color-wheel.js ***!
  \***********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _colorWheelCanvas = __webpack_require__(/*! ../draw/color-wheel-canvas */ \"./src/core/components/truesight-color-wheel/draw/color-wheel-canvas.js\");\n\nvar _colorWheelCanvas2 = _interopRequireDefault(_colorWheelCanvas);\n\n__webpack_require__(/*! ../style/truesight-color-wheel.scss */ \"./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ColorWheel {\n\n  constructor(mediaElement) {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.className = 'truesight-color-wheel';\n    canvasElement.style.top = '10px';\n    canvasElement.style.right = '10px';\n\n    const { parentNode } = mediaElement;\n    if (parentNode) {\n      parentNode.appendChild(canvasElement);\n    }\n\n    this.canvas = new _colorWheelCanvas2.default(canvasElement);\n    this.mediaElement = mediaElement;\n\n    this.resizeCanvasElement();\n    this.addResizeEventListeners();\n  }\n\n  resizeCanvasElement() {\n    const currentWidth = this.mediaElement.offsetWidth;\n    const r1 = 1090 - 285;\n    const r2 = 125 - 50;\n    const resizedWidth = r2 * (currentWidth - 285) / r1 + 50;\n\n    this.canvas.resize(resizedWidth);\n  }\n\n  addResizeEventListeners() {\n    window.addEventListener('resize', () => {\n      this.resizeCanvasElement();\n      this.canvas.redrawLastFrame();\n    });\n  }\n\n  draw(method, parameters) {\n    this.canvas.draw(method, parameters);\n  }\n\n  redrawLastFrame() {\n    this.canvas.redrawLastFrame();\n  }\n}\nexports.default = ColorWheel;\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/core/color-wheel.js?")},"./src/core/components/truesight-color-wheel/core/get-hue-regions.js":
/*!***************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/core/get-hue-regions.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.DEFAULT_HUE_REGION_SIZE = undefined;\nexports.default = getHueRegions;\n\nvar _degreesToRadians = __webpack_require__(/*! utils/math/degrees-to-radians */ "./src/utils/math/degrees-to-radians.js");\n\nvar _degreesToRadians2 = _interopRequireDefault(_degreesToRadians);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst DEFAULT_HUE_REGION_SIZE = exports.DEFAULT_HUE_REGION_SIZE = 45;\n\nconst hueRegions = [];\n\nfunction getHueRegions(hueRegionSize = DEFAULT_HUE_REGION_SIZE) {\n  if (hueRegions.length === 0) {\n    for (let i = 0; i < 360; i += hueRegionSize) {\n      const [lowerBound, upperBound] = [i, i + hueRegionSize];\n      const [startAngle, endAngle] = [(0, _degreesToRadians2.default)(lowerBound), (0, _degreesToRadians2.default)(upperBound)];\n\n      hueRegions.push({\n        hue: i,\n        bounds: [lowerBound, upperBound],\n        angleInterval: [startAngle, endAngle]\n      });\n    }\n  }\n\n  return hueRegions;\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/core/get-hue-regions.js?')},"./src/core/components/truesight-color-wheel/core/map-color-to-hue-region.js":
/*!***********************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/core/map-color-to-hue-region.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = mapColorToHueRegion;\n\nvar _getHueRegions = __webpack_require__(/*! ./get-hue-regions */ "./src/core/components/truesight-color-wheel/core/get-hue-regions.js");\n\nvar _getHueRegions2 = _interopRequireDefault(_getHueRegions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mapColorToHueRegion(color, hueRegions = (0, _getHueRegions2.default)()) {\n  const mappedHueRegion = hueRegions.find(hueRegion => {\n    if (color[0] === 360) {\n      return hueRegions[0];\n    }\n\n    return color[0] >= hueRegion.bounds[0] && color[0] < hueRegion.bounds[1];\n  }) || hueRegions[0];\n\n  return mappedHueRegion;\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/core/map-color-to-hue-region.js?')},"./src/core/components/truesight-color-wheel/draw/color-wheel-canvas.js":
/*!******************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/color-wheel-canvas.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _drawLoadingAnimation = __webpack_require__(/*! ../draw/draw-loading-animation */ \"./src/core/components/truesight-color-wheel/draw/draw-loading-animation.js\");\n\nvar _drawLoadingAnimation2 = _interopRequireDefault(_drawLoadingAnimation);\n\nvar _drawColorWheel = __webpack_require__(/*! ../draw/draw-color-wheel */ \"./src/core/components/truesight-color-wheel/draw/draw-color-wheel.js\");\n\nvar _drawColorWheel2 = _interopRequireDefault(_drawColorWheel);\n\nvar _drawColorPalette = __webpack_require__(/*! ../draw/draw-color-palette */ \"./src/core/components/truesight-color-wheel/draw/draw-color-palette.js\");\n\nvar _drawColorPalette2 = _interopRequireDefault(_drawColorPalette);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ColorWheelCanvas {\n\n  constructor(canvasElement) {\n    this.canvasElement = canvasElement;\n  }\n\n  draw(method, parameters) {\n    this.clearCanvas();\n    routeRequest(method, this.canvasElement, parameters);\n    this.lastRequest = [method, parameters];\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasElement.getContext('2d');\n    canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n  }\n\n  redrawLastFrame() {\n    if (this.lastRequest) {\n      const [method, parameters] = this.lastRequest;\n      this.draw(method, parameters);\n    }\n  }\n\n  resize(width) {\n    this.canvasElement.width = width;\n    this.canvasElement.height = width;\n  }\n}\n\nexports.default = ColorWheelCanvas;\n\n\nfunction routeRequest(method, canvasElement, parameters) {\n  switch (method) {\n    case 'loading-animation':\n      (0, _drawLoadingAnimation2.default)(canvasElement, parameters);\n      break;\n    case 'color-wheel':\n      (0, _drawColorWheel2.default)(canvasElement);\n      break;\n    case 'color-palette':\n      (0, _drawColorPalette2.default)(canvasElement, parameters);\n      break;\n    default:\n      break;\n  }\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/color-wheel-canvas.js?")},"./src/core/components/truesight-color-wheel/draw/draw-background.js":
/*!***************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/draw-background.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = drawBackground;\n\nvar _calculateDimensions = __webpack_require__(/*! ../core/calculate-dimensions */ "./src/core/components/truesight-color-wheel/core/calculate-dimensions.js");\n\nvar _colors = __webpack_require__(/*! ../style/colors */ "./src/core/components/truesight-color-wheel/style/colors.js");\n\nfunction drawBackground(canvasElement) {\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  canvasContext.save();\n\n  canvasContext.translate(canvasElement.width / 2, canvasElement.height / 2);\n\n  const r = (0, _calculateDimensions.calculateR)(canvasElement.width);\n  const endAngle = 2 * Math.PI;\n\n  canvasContext.beginPath();\n  canvasContext.arc(0, 0, r, 0, endAngle);\n\n  canvasContext.fillStyle = _colors.BACKGROUND_COLOR;\n  canvasContext.fill();\n\n  canvasContext.restore();\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/draw-background.js?')},"./src/core/components/truesight-color-wheel/draw/draw-color-palette.js":
/*!******************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/draw-color-palette.js ***!
  \******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = drawColorPalette;\n\nvar _color = __webpack_require__(/*! color */ "./node_modules/color/index.js");\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _rgbToHsluv = __webpack_require__(/*! utils/color/rgb-to-hsluv */ "./src/utils/color/rgb-to-hsluv.js");\n\nvar _rgbToHsluv2 = _interopRequireDefault(_rgbToHsluv);\n\nvar _transformOrigin = __webpack_require__(/*! ./transform-origin */ "./src/core/components/truesight-color-wheel/draw/transform-origin.js");\n\nvar _transformOrigin2 = _interopRequireDefault(_transformOrigin);\n\nvar _drawBackground = __webpack_require__(/*! ./draw-background */ "./src/core/components/truesight-color-wheel/draw/draw-background.js");\n\nvar _drawBackground2 = _interopRequireDefault(_drawBackground);\n\nvar _drawHueRegion = __webpack_require__(/*! ./draw-hue-region */ "./src/core/components/truesight-color-wheel/draw/draw-hue-region.js");\n\nvar _drawHueRegion2 = _interopRequireDefault(_drawHueRegion);\n\nvar _mapColorToHueRegion = __webpack_require__(/*! ../core/map-color-to-hue-region */ "./src/core/components/truesight-color-wheel/core/map-color-to-hue-region.js");\n\nvar _mapColorToHueRegion2 = _interopRequireDefault(_mapColorToHueRegion);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst BLACK_LIGHTNESS_UPPER_BOUND = 10;\nconst WHITE_LIGHTNESS_LOWER_BOUND = 90;\n\nconst MAX_NUMBER_OF_HUES_PER_SLICE = 3;\n\nfunction drawColorPalette(canvasElement, parameters) {\n  const { colorPalette } = parameters;\n\n  (0, _drawBackground2.default)(canvasElement);\n  drawHueRegions(canvasElement, colorPalette);\n}\n\nfunction drawHueRegions(canvasElement, colorPalette) {\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  canvasContext.save();\n\n  (0, _transformOrigin2.default)(canvasElement);\n\n  const filteredColorPalette = filterColorsByLightness(colorPalette);\n  const colorPaletteByHue = groupColorPaletteByHue(filteredColorPalette);\n\n  for (const [hueRegion, hues] of colorPaletteByHue) {\n    const { angleInterval } = hueRegion;\n\n    hues.sort((hue, hue2) => hue2.population - hue.population);\n    const numberOfHuesToDraw = Math.min(hues.length, MAX_NUMBER_OF_HUES_PER_SLICE);\n\n    let r = canvasElement.width;\n    const deltaR = 1 / numberOfHuesToDraw * canvasElement.width;\n\n    for (let i = 0; i < numberOfHuesToDraw; i += 1) {\n      const cssColor = hues[i].hslColor.string();\n      const rInterval = [r - deltaR, r];\n\n      (0, _drawHueRegion2.default)(canvasElement, {\n        cssColor,\n        angleInterval,\n        rInterval\n      });\n\n      r -= deltaR;\n    }\n  }\n\n  canvasContext.restore();\n}\n\nfunction filterColorsByLightness(colorPalette) {\n  return colorPalette.filter(entry => {\n    const hsluvColor = (0, _rgbToHsluv2.default)(entry.color.channels);\n\n    return hsluvColor[2] >= BLACK_LIGHTNESS_UPPER_BOUND && hsluvColor[2] <= WHITE_LIGHTNESS_LOWER_BOUND;\n  });\n}\n\nfunction groupColorPaletteByHue(colorPalette) {\n  const colorPaletteByHue = new Map();\n\n  colorPalette.forEach(entry => {\n    const hslColor = _color2.default.rgb(entry.color.channels).hsl();\n    const hueRegion = (0, _mapColorToHueRegion2.default)(hslColor.color);\n\n    const hues = colorPaletteByHue.get(hueRegion);\n\n    const hue = {\n      hslColor,\n      population: entry.population\n    };\n\n    if (!hues) {\n      colorPaletteByHue.set(hueRegion, [hue]);\n    } else if (hues instanceof Array) {\n      hues.push(hue);\n    }\n  });\n\n  return colorPaletteByHue;\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/draw-color-palette.js?')},"./src/core/components/truesight-color-wheel/draw/draw-color-wheel.js":
/*!****************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/draw-color-wheel.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = drawColorWheel;\n\nvar _transformOrigin = __webpack_require__(/*! ./transform-origin */ "./src/core/components/truesight-color-wheel/draw/transform-origin.js");\n\nvar _transformOrigin2 = _interopRequireDefault(_transformOrigin);\n\nvar _drawHueRegion = __webpack_require__(/*! ./draw-hue-region */ "./src/core/components/truesight-color-wheel/draw/draw-hue-region.js");\n\nvar _drawHueRegion2 = _interopRequireDefault(_drawHueRegion);\n\nvar _getHueRegions = __webpack_require__(/*! ../core/get-hue-regions */ "./src/core/components/truesight-color-wheel/core/get-hue-regions.js");\n\nvar _getHueRegions2 = _interopRequireDefault(_getHueRegions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction drawColorWheel(canvasElement) {\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  canvasContext.save();\n\n  (0, _transformOrigin2.default)(canvasElement);\n\n  for (const hueRegion of (0, _getHueRegions2.default)()) {\n    const { hue, angleInterval } = hueRegion;\n\n    const cssColor = `hsl(${hue}, 70%, 50%)`;\n    const rInterval = [0, canvasElement.width];\n\n    (0, _drawHueRegion2.default)(canvasElement, {\n      cssColor,\n      angleInterval,\n      rInterval\n    });\n  }\n\n  canvasContext.restore();\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/draw-color-wheel.js?')},"./src/core/components/truesight-color-wheel/draw/draw-hue-region.js":
/*!***************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/draw-hue-region.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = drawHueRegion;\n\nvar _calculateDimensions = __webpack_require__(/*! ../core/calculate-dimensions */ "./src/core/components/truesight-color-wheel/core/calculate-dimensions.js");\n\nfunction drawHueRegion(canvasElement, parameters) {\n  const { cssColor, angleInterval, rInterval } = parameters;\n\n  const [startAngle, endAngle] = angleInterval;\n  const [startR, endR] = rInterval;\n\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  canvasContext.save();\n\n  for (let i = startR; i <= endR; i += 1) {\n    const r = (0, _calculateDimensions.calculateR)(i);\n\n    canvasContext.beginPath();\n    canvasContext.arc(0, 0, r, startAngle, endAngle);\n\n    canvasContext.strokeStyle = cssColor;\n    canvasContext.stroke();\n  }\n\n  canvasContext.restore();\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/draw-hue-region.js?')},"./src/core/components/truesight-color-wheel/draw/draw-loading-animation.js":
/*!**********************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/draw-loading-animation.js ***!
  \**********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = drawLoadingAnimation;\n\nvar _degreesToRadians = __webpack_require__(/*! utils/math/degrees-to-radians */ "./src/utils/math/degrees-to-radians.js");\n\nvar _degreesToRadians2 = _interopRequireDefault(_degreesToRadians);\n\nvar _calculateDimensions = __webpack_require__(/*! ../core/calculate-dimensions */ "./src/core/components/truesight-color-wheel/core/calculate-dimensions.js");\n\nvar _colors = __webpack_require__(/*! ../style/colors */ "./src/core/components/truesight-color-wheel/style/colors.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction drawLoadingAnimation(canvasElement, parameters) {\n  const { delta, completed } = parameters;\n\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  canvasContext.save();\n\n  canvasContext.translate(canvasElement.width / 2, canvasElement.height / 2);\n  canvasContext.rotate(-Math.PI / 2);\n\n  const r = (0, _calculateDimensions.calculateR)(canvasElement.width);\n  const endAngle = (0, _degreesToRadians2.default)(delta * completed * 360);\n\n  canvasContext.beginPath();\n  canvasContext.arc(0, 0, r, 0, endAngle);\n\n  if (Math.abs(2 * Math.PI - endAngle) > 10 ** -3) {\n    canvasContext.lineTo(0, 0);\n    canvasContext.closePath();\n  }\n\n  canvasContext.fillStyle = _colors.BACKGROUND_COLOR;\n  canvasContext.strokeStyle = _colors.BACKGROUND_COLOR;\n  canvasContext.fill();\n  canvasContext.stroke();\n\n  canvasContext.restore();\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/draw-loading-animation.js?')},"./src/core/components/truesight-color-wheel/draw/transform-origin.js":
/*!****************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/draw/transform-origin.js ***!
  \****************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = transformOrigin;\n\nvar _degreesToRadians = __webpack_require__(/*! utils/math/degrees-to-radians */ "./src/utils/math/degrees-to-radians.js");\n\nvar _degreesToRadians2 = _interopRequireDefault(_degreesToRadians);\n\nvar _getHueRegions = __webpack_require__(/*! ../core/get-hue-regions */ "./src/core/components/truesight-color-wheel/core/get-hue-regions.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transformOrigin(canvasElement) {\n  const canvasContext = canvasElement.getContext(\'2d\');\n\n  const originCoordinates = [canvasElement.width / 2, canvasElement.height / 2];\n  const rotationAngle = -Math.PI / 2 - (0, _degreesToRadians2.default)(_getHueRegions.DEFAULT_HUE_REGION_SIZE) / 2;\n\n  canvasContext.translate(originCoordinates[0], originCoordinates[1]);\n  canvasContext.rotate(rotationAngle);\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/draw/transform-origin.js?')},"./src/core/components/truesight-color-wheel/index.js":
/*!************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/index.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _colorWheel = __webpack_require__(/*! ./core/color-wheel */ "./src/core/components/truesight-color-wheel/core/color-wheel.js");\n\nvar _colorWheel2 = _interopRequireDefault(_colorWheel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _colorWheel2.default;\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/index.js?')},"./src/core/components/truesight-color-wheel/style/colors.js":
/*!*******************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/style/colors.js ***!
  \*******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst BACKGROUND_COLOR = exports.BACKGROUND_COLOR = 'hsla(0, 0%, 90%, 0.8)';\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/style/colors.js?")},"./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss":
/*!************************************************************************************!*\
  !*** ./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss ***!
  \************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./truesight-color-wheel.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/core/components/truesight-color-wheel/style/truesight-color-wheel.scss?')},"./src/core/components/truesight-image/core/create-component.js":
/*!**********************************************************************!*\
  !*** ./src/core/components/truesight-image/core/create-component.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _truesight = __webpack_require__(/*! truesight */ "./node_modules/truesight/dist/truesight.esm.js");\n\nvar _truesight2 = _interopRequireDefault(_truesight);\n\nvar _truesightColorWheel = __webpack_require__(/*! core/components/truesight-color-wheel */ "./src/core/components/truesight-color-wheel/index.js");\n\nvar _truesightColorWheel2 = _interopRequireDefault(_truesightColorWheel);\n\nvar _loadImage = __webpack_require__(/*! ../utils/load-image */ "./src/core/components/truesight-image/utils/load-image.js");\n\nvar _loadImage2 = _interopRequireDefault(_loadImage);\n\n__webpack_require__(/*! ../style/truesight-image.scss */ "./src/core/components/truesight-image/style/truesight-image.scss");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async function createComponent(parameters) {\n  const { imageElement } = parameters;\n\n  await (0, _loadImage2.default)(imageElement, 5000);\n\n  const colorWheel = new _truesightColorWheel2.default(imageElement);\n  const colorPalette = await _truesight2.default.popularizeImage(parameters);\n\n  colorWheel.draw(\'color-palette\', { colorPalette });\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-image/core/create-component.js?')},"./src/core/components/truesight-image/index.js":
/*!******************************************************!*\
  !*** ./src/core/components/truesight-image/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createComponent = __webpack_require__(/*! ./core/create-component */ "./src/core/components/truesight-image/core/create-component.js");\n\nvar _createComponent2 = _interopRequireDefault(_createComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  create: _createComponent2.default\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-image/index.js?')},"./src/core/components/truesight-image/style/truesight-image.scss":
/*!************************************************************************!*\
  !*** ./src/core/components/truesight-image/style/truesight-image.scss ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./truesight-image.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-image/style/truesight-image.scss");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/core/components/truesight-image/style/truesight-image.scss?')},"./src/core/components/truesight-image/utils/load-image.js":
/*!*****************************************************************!*\
  !*** ./src/core/components/truesight-image/utils/load-image.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadImage;\nfunction loadImage(imageElement, delay = 2000) {\n  const loadImagePromise = new Promise(resolve => {\n    const onImageLoad = () => {\n      imageElement.removeEventListener('load', onImageLoad);\n      resolve();\n    };\n\n    imageElement.addEventListener('load', onImageLoad);\n\n    if (imageElement.complete && imageElement.naturalWidth !== 0) {\n      imageElement.removeEventListener('load', onImageLoad);\n      resolve();\n    }\n  });\n\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new RangeError(`failed to load the image, timeout of ${delay} ms exceeded`));\n    }, delay);\n  });\n\n  return Promise.race([loadImagePromise, timeoutPromise]);\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-image/utils/load-image.js?")},"./src/core/components/truesight-video/core/create-component.js":
/*!**********************************************************************!*\
  !*** ./src/core/components/truesight-video/core/create-component.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _truesightColorWheel = __webpack_require__(/*! core/components/truesight-color-wheel */ "./src/core/components/truesight-color-wheel/index.js");\n\nvar _truesightColorWheel2 = _interopRequireDefault(_truesightColorWheel);\n\nvar _setDimensions = __webpack_require__(/*! ./set-dimensions */ "./src/core/components/truesight-video/core/set-dimensions.js");\n\nvar _setDimensions2 = _interopRequireDefault(_setDimensions);\n\nvar _popularizeVideo = __webpack_require__(/*! ./popularize-video */ "./src/core/components/truesight-video/core/popularize-video.js");\n\nvar _popularizeVideo2 = _interopRequireDefault(_popularizeVideo);\n\nvar _drawColorPaletteCollection = __webpack_require__(/*! ./draw-color-palette-collection */ "./src/core/components/truesight-video/core/draw-color-palette-collection.js");\n\nvar _drawColorPaletteCollection2 = _interopRequireDefault(_drawColorPaletteCollection);\n\nvar _loadVideo = __webpack_require__(/*! ../utils/load-video */ "./src/core/components/truesight-video/utils/load-video.js");\n\nvar _loadVideo2 = _interopRequireDefault(_loadVideo);\n\n__webpack_require__(/*! ../style/truesight-video.scss */ "./src/core/components/truesight-video/style/truesight-video.scss");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async function createComponent(parameters) {\n  const { videoElement } = parameters;\n\n  await (0, _loadVideo2.default)(videoElement, 5000);\n  await (0, _setDimensions2.default)(videoElement);\n\n  const colorWheel = new _truesightColorWheel2.default(videoElement);\n  const colorPaletteCollection = await (0, _popularizeVideo2.default)(parameters, colorWheel);\n\n  (0, _drawColorPaletteCollection2.default)(colorWheel, colorPaletteCollection);\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/core/create-component.js?')},"./src/core/components/truesight-video/core/draw-color-palette-collection.js":
/*!***********************************************************************************!*\
  !*** ./src/core/components/truesight-video/core/draw-color-palette-collection.js ***!
  \***********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = drawColorPaletteCollection;\n\nvar _truesightColorWheel = __webpack_require__(/*! core/components/truesight-color-wheel */ \"./src/core/components/truesight-color-wheel/index.js\");\n\nvar _truesightColorWheel2 = _interopRequireDefault(_truesightColorWheel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction drawColorPaletteCollection(colorWheel, colorPaletteCollection) {\n  const videoElement = colorWheel.mediaElement;\n\n  if (videoElement instanceof HTMLVideoElement) {\n    let nextFrameIndex = 0;\n    let nextFrameTime = 0;\n\n    const deltaTime = colorPaletteCollection[1].timestamp - colorPaletteCollection[0].timestamp;\n\n    videoElement.addEventListener('timeupdate', () => {\n      if (videoElement.currentTime >= nextFrameTime) {\n        const mappedColorPalette = colorPaletteCollection.find(colorPalette => colorPalette.index === nextFrameIndex);\n\n        if (mappedColorPalette) {\n          colorWheel.draw('color-palette', { colorPalette: mappedColorPalette.result });\n\n          nextFrameIndex += 1;\n          nextFrameTime += deltaTime;\n        }\n      }\n    });\n\n    videoElement.addEventListener('seeked', () => {\n      nextFrameIndex = Math.floor(videoElement.currentTime / deltaTime) + 1;\n      nextFrameTime = nextFrameIndex * deltaTime;\n    });\n  }\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/core/draw-color-palette-collection.js?")},"./src/core/components/truesight-video/core/popularize-video.js":
/*!**********************************************************************!*\
  !*** ./src/core/components/truesight-video/core/popularize-video.js ***!
  \**********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _truesight = __webpack_require__(/*! truesight */ "./node_modules/truesight/dist/truesight.esm.js");\n\nvar _truesight2 = _interopRequireDefault(_truesight);\n\nvar _truesightColorWheel = __webpack_require__(/*! core/components/truesight-color-wheel */ "./src/core/components/truesight-color-wheel/index.js");\n\nvar _truesightColorWheel2 = _interopRequireDefault(_truesightColorWheel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async function popularizeVideo(parameters, colorWheel) {\n  const { videoElement, secondsBetweenFrames } = parameters;\n\n  const colorPaletteCollection = [];\n\n  const colorPaletteStream = _truesight2.default.popularizeVideo(parameters);\n\n  const expectedNumberOfFrames = Math.floor(videoElement.duration / secondsBetweenFrames) + 1;\n  const delta = 1 / expectedNumberOfFrames;\n  let completed = 0;\n\n  for await (const colorPalette of colorPaletteStream) {\n    completed += 1;\n\n    colorWheel.draw(\'loading-animation\', { delta, completed });\n\n    colorPaletteCollection.push(colorPalette);\n  }\n\n  return colorPaletteCollection;\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/core/popularize-video.js?')},"./src/core/components/truesight-video/core/set-dimensions.js":
/*!********************************************************************!*\
  !*** ./src/core/components/truesight-video/core/set-dimensions.js ***!
  \********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ASPECT_RATIO_VIDEO = 1280 / 536;\n\nexports.default = async function setDimensions(videoElement) {\n  const containerElement = document.querySelector('.container');\n\n  if (containerElement) {\n    videoElement.width = containerElement.offsetWidth; // eslint-disable-line no-param-reassign\n    videoElement.height = videoElement.width / ASPECT_RATIO_VIDEO; // eslint-disable-line no-param-reassign\n  }\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/core/set-dimensions.js?")},"./src/core/components/truesight-video/index.js":
/*!******************************************************!*\
  !*** ./src/core/components/truesight-video/index.js ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createComponent = __webpack_require__(/*! ./core/create-component */ "./src/core/components/truesight-video/core/create-component.js");\n\nvar _createComponent2 = _interopRequireDefault(_createComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  create: _createComponent2.default\n};\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/index.js?')},"./src/core/components/truesight-video/style/truesight-video.scss":
/*!************************************************************************!*\
  !*** ./src/core/components/truesight-video/style/truesight-video.scss ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../../../../../node_modules/css-loader!../../../../../node_modules/sass-loader/lib/loader.js!./truesight-video.scss */ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/core/components/truesight-video/style/truesight-video.scss");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/style/truesight-video.scss?')},"./src/core/components/truesight-video/utils/load-video.js":
/*!*****************************************************************!*\
  !*** ./src/core/components/truesight-video/utils/load-video.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadVideo;\nfunction loadVideo(videoElement, delay = 2000) {\n  const loadVideoPromise = new Promise(resolve => {\n    const onVideoLoad = () => {\n      videoElement.removeEventListener('loadeddata', onVideoLoad);\n      resolve();\n    };\n\n    videoElement.addEventListener('loadeddata', onVideoLoad);\n\n    if (videoElement.readyState === 4) {\n      videoElement.removeEventListener('loadeddata', onVideoLoad);\n      resolve();\n    }\n  });\n\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new RangeError(`failed to load the video, timeout of ${delay} ms exceeded`));\n    }, delay);\n  });\n\n  return Promise.race([loadVideoPromise, timeoutPromise]);\n}\n\n//# sourceURL=webpack:///./src/core/components/truesight-video/utils/load-video.js?")},"./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _truesightImage = __webpack_require__(/*! ./core/components/truesight-image */ \"./src/core/components/truesight-image/index.js\");\n\nvar _truesightImage2 = _interopRequireDefault(_truesightImage);\n\nvar _truesightVideo = __webpack_require__(/*! ./core/components/truesight-video */ \"./src/core/components/truesight-video/index.js\");\n\nvar _truesightVideo2 = _interopRequireDefault(_truesightVideo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst imageElements = document.querySelectorAll('.truesight-image > img');\n\nimageElements.forEach(async imageElement => {\n  if (imageElement instanceof HTMLImageElement) {\n    await _truesightImage2.default.create({\n      imageElement,\n      numberOfColors: 12,\n      quality: 10\n    });\n  }\n});\n\nconst videoElements = document.querySelectorAll('.truesight-video > video');\n\nvideoElements.forEach(async videoElement => {\n  if (videoElement instanceof HTMLVideoElement) {\n    await _truesightVideo2.default.create({\n      videoElement,\n      secondsBetweenFrames: 1,\n      numberOfColors: 8,\n      quality: 10\n    });\n  }\n});\n\n//# sourceURL=webpack:///./src/main.js?")},"./src/utils/color/rgb-to-hsluv.js":
/*!*****************************************!*\
  !*** ./src/utils/color/rgb-to-hsluv.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = rgbToHSLuv;\n\nvar _hsluv = __webpack_require__(/*! hsluv */ "./node_modules/hsluv/hsluv.js");\n\nvar _hsluv2 = _interopRequireDefault(_hsluv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rgbToHSLuv(color) {\n  const rgbChannels = color.map(channel => channel / 255);\n  const hsluvChannels = _hsluv2.default.rgbToHsluv(rgbChannels);\n\n  return hsluvChannels;\n}\n\n//# sourceURL=webpack:///./src/utils/color/rgb-to-hsluv.js?')},"./src/utils/math/degrees-to-radians.js":
/*!**********************************************!*\
  !*** ./src/utils/math/degrees-to-radians.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = degreesToRadians;\nfunction degreesToRadians(degrees) {\n  return Math.PI / 180 * degrees;\n}\n\n//# sourceURL=webpack:///./src/utils/math/degrees-to-radians.js?')}});